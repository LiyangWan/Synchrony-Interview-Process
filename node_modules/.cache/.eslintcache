[{"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/index.js":"1","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/App.js":"2","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/reportWebVitals.js":"3","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/NewInterview.js":"4","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/HomePage.js":"5","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Login.js":"6","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/EditTemplates.js":"7","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/Interviews.js":"8","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Navbar.js":"9","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/aws-exports.js":"10"},{"size":638,"mtime":1706209752488,"results":"11","hashOfConfig":"12"},{"size":952,"mtime":1706201576858,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1706201576860,"results":"14","hashOfConfig":"12"},{"size":1929,"mtime":1706201770307,"results":"15","hashOfConfig":"12"},{"size":1516,"mtime":1706209446886,"results":"16","hashOfConfig":"12"},{"size":465,"mtime":1706201576859,"results":"17","hashOfConfig":"12"},{"size":339,"mtime":1706201576859,"results":"18","hashOfConfig":"12"},{"size":2576,"mtime":1706201576859,"results":"19","hashOfConfig":"12"},{"size":601,"mtime":1706201576859,"results":"20","hashOfConfig":"12"},{"size":912,"mtime":1706209120898,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f5u9a7",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/index.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/App.js",["54","55"],[],"// src/App.js\nimport React from 'react';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport Interviews from './components/Dashboard/Interviews';\nimport NewInterview from './components/Dashboard/NewInterview';\nimport EditTemplates from './components/Dashboard/EditTemplates';\nimport Login from './components/Login';\n\nimport './App.css';\n\nfunction App() {\n  // const [token, setToken] = useState();\n  // if(!token) {\n  //   return <Login setToken={setToken} />\n  // }\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/dashboard/interviews\" element={<Interviews />} />\n        <Route path=\"/dashboard/New-interview\" element={<NewInterview />} />\n        <Route path=\"/dashboard/edit-templates\" element={<EditTemplates />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/reportWebVitals.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/NewInterview.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/HomePage.js",["56"],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Login.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/EditTemplates.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/Interviews.js",["57"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from './synchrony-logo-1.png';\nimport './Interviews.css';\nimport Navbar from '../Navbar';\nimport HomePage from '../HomePage';\n\nfunction Interviews() {\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredInterviews, setFilteredInterviews] = useState([]);\n\n  useEffect(() => {\n    const fetchInterviews = async () => {\n      try {\n        const { data } = await axios.get('https://rv0femjg65.execute-api.us-east-1.amazonaws.com/default/InterviewsAccess');\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error fetching interviews:', error);\n      }\n    };\n\n    fetchInterviews();\n  }, []);\n\n  useEffect(() => {\n    const results = interviews.filter(interview => {\n      const interviewer = interview.Interviewer ? interview.Interviewer.toLowerCase() : '';\n      const name = interview.Name ? interview.Name.toLowerCase() : '';\n      // Assuming you have a Date property in your interview objects.\n      const date = interview.Date ? interview.Date.toLowerCase() : '';\n  \n      return interviewer.includes(searchTerm.toLowerCase()) ||\n             name.includes(searchTerm.toLowerCase()) ||\n             date.includes(searchTerm.toLowerCase());\n    });\n    setFilteredInterviews(results);\n  }, [searchTerm, interviews]);\n  \n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div className=\"interviews-container\">\n      <div className=\"header\">\n        <Link to =\"/\">\n        <img src={logoImage} alt=\"Synchrony Logo\" className=\"logo\" />\n        </Link>\n        <Navbar />\n      </div>\n      <div className=\"portal-header-container\">\n        <h1 className=\"recruiting-portal-header\">Recruiting Portal</h1>\n      </div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by interviewer, applicant, or date\"\n          value={searchTerm}\n          onChange={handleSearch}\n          className=\"search-bar\"\n        />\n      </div>\n      <div className=\"interviews-list\">\n  {filteredInterviews.map((interview) => (\n    <div key={interview.InterviewID} className=\"interview-item\">\n      <p>Interview ID: {interview.InterviewID}</p>\n      <p>Interviewer: {interview.Interviewer || 'N/A'}</p> {/* If interviewer is undefined, display 'N/A' */}\n      <p>Name: {interview.Name}</p>\n    </div>\n  ))}\n</div>\n\n    </div>\n  );\n}\n\nexport default Interviews;\n","/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Navbar.js",[],[],"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/aws-exports.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":9,"column":8,"nodeType":"60","messageId":"61","endLine":9,"endColumn":13},{"ruleId":"58","severity":1,"message":"63","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":14},{"ruleId":"58","severity":1,"message":"64","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":16},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Link' is defined but never used.","'HomePage' is defined but never used."]