{"ast":null,"code":"var _jsxFileName = \"/Users/gautampirthiani/Desktop/s_project/src/components/Dashboard/Interviews.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logoimage from './synchrony-logo-1.png'; // Ensure this is the correct path to your logo\nimport './Interviews.css';\n\n// Interviews.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interviews() {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Function to fetch interviews\n    const fetchInterviews = async () => {\n      try {\n        const response = await fetch('/api/interviews'); // Replace with your actual API endpoint\n        const data = await response.json();\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error fetching interviews:', error);\n      }\n    };\n    fetchInterviews();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by interviewer, applicant, or date\",\n      value: searchTerm,\n      onChange: handleSearch,\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"interviews-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Applicant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interviewer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Interview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: interviews.filter(interview => interview.applicantName.toLowerCase().includes(searchTerm.toLowerCase()) || interview.interviewerName.toLowerCase().includes(searchTerm.toLowerCase()) || interview.date.includes(searchTerm)).map(interview => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: interview.applicantName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: interview.interviewerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: interview.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, interview.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Interviews, \"qhd8bA0z2KFKAfqNGfCNpDv5+Nc=\");\n_c = Interviews;\nexport default Interviews;\nvar _c;\n$RefreshReg$(_c, \"Interviews\");","map":{"version":3,"names":["React","useState","useEffect","axios","logoimage","jsxDEV","_jsxDEV","Interviews","_s","interviews","setInterviews","searchTerm","setSearchTerm","fetchInterviews","response","fetch","data","json","error","console","handleSearch","event","target","value","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","filter","interview","applicantName","toLowerCase","includes","interviewerName","date","map","id","_c","$RefreshReg$"],"sources":["/Users/gautampirthiani/Desktop/s_project/src/components/Dashboard/Interviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logoimage from './synchrony-logo-1.png'; // Ensure this is the correct path to your logo\nimport './Interviews.css';\n\n// Interviews.js\n\nfunction Interviews() {\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    // Function to fetch interviews\n    const fetchInterviews = async () => {\n      try {\n        const response = await fetch('/api/interviews'); // Replace with your actual API endpoint\n        const data = await response.json();\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error fetching interviews:', error);\n      }\n    };\n\n    fetchInterviews();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div className=\"interviews-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Search by interviewer, applicant, or date\"\n        value={searchTerm}\n        onChange={handleSearch}\n        className=\"search-bar\"\n      />\n      <table className=\"interviews-table\">\n        <thead>\n          <tr>\n            <th>Applicant Name</th>\n            <th>Interviewer Name</th>\n            <th>Date of Interview</th>\n          </tr>\n        </thead>\n        <tbody>\n          {interviews\n            .filter(\n              (interview) =>\n                interview.applicantName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                interview.interviewerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                interview.date.includes(searchTerm)\n            )\n            .map((interview) => (\n              <tr key={interview.id}>\n                <td>{interview.applicantName}</td>\n                <td>{interview.interviewerName}</td>\n                <td>{interview.date}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Interviews;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}