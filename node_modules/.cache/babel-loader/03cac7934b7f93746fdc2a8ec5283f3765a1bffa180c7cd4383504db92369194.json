{"ast":null,"code":"var _jsxFileName = \"/Users/gautampirthiani/Desktop/s_project/src/components/Dashboard/Interviews.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logoImage from './synchrony-logo-1.png'; // Ensure this is the correct path to your logo\nimport './Interviews.css';\nimport Navbar from './Dashboard/Navbar'; // Assuming Navbar.js is in the same directory\n// Interviews.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interviews() {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchInterviews = async () => {\n      try {\n        const response = await fetch('/api/interviews'); // Your actual API endpoint\n        const data = await response.json();\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchInterviews();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Synchrony\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by interviewer, applicant, or date\",\n      value: searchTerm,\n      onChange: handleSearch,\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Interviews, \"qhd8bA0z2KFKAfqNGfCNpDv5+Nc=\");\n_c = Interviews;\nexport default Interviews;\nvar _c;\n$RefreshReg$(_c, \"Interviews\");","map":{"version":3,"names":["React","useState","useEffect","axios","logoImage","Navbar","jsxDEV","_jsxDEV","Interviews","_s","interviews","setInterviews","searchTerm","setSearchTerm","fetchInterviews","response","fetch","data","json","error","console","handleSearch","event","target","value","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/gautampirthiani/Desktop/s_project/src/components/Dashboard/Interviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport logoImage from './synchrony-logo-1.png'; // Ensure this is the correct path to your logo\nimport './Interviews.css';\nimport Navbar from './Dashboard/Navbar'; // Assuming Navbar.js is in the same directory\n// Interviews.js\n\n\nfunction Interviews() {\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    const fetchInterviews = async () => {\n      try {\n        const response = await fetch('/api/interviews'); // Your actual API endpoint\n        const data = await response.json();\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchInterviews();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div className=\"interviews-container\">\n      <header className=\"header\">\n        <img src={logoImage} alt=\"Synchrony\" className=\"logo\" />\n        <Navbar /> {/* Include the Navbar component */}\n      </header>\n      <input\n        type=\"text\"\n        placeholder=\"Search by interviewer, applicant, or date\"\n        value={searchTerm}\n        onChange={handleSearch}\n        className=\"search-bar\"\n      />\n      {/* The rest of your component */}\n    </div>\n  );\n}\n\nexport default Interviews;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAChD,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,oBAAoB,CAAC,CAAC;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACjD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,aAAa,CAACM,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9BT,aAAa,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA;MAAQkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACxBnB,OAAA;QAAKoB,GAAG,EAAEvB,SAAU;QAACwB,GAAG,EAAC,WAAW;QAACH,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDzB,OAAA,CAACF,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACTzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,2CAA2C;MACvDV,KAAK,EAAEZ,UAAW;MAClBuB,QAAQ,EAAEd,YAAa;MACvBI,SAAS,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACvB,EAAA,CAtCQD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}