{"ast":null,"code":"var _jsxFileName = \"/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/Interviews.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from './synchrony-logo-1.png';\nimport './Interviews.css';\nimport Navbar from '../Navbar';\nimport HomePage from '../HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interviews() {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredInterviews, setFilteredInterviews] = useState([]);\n  useEffect(() => {\n    const fetchInterviews = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://rv0femjg65.execute-api.us-east-1.amazonaws.com/default/InterviewsAccess');\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error fetching interviews:', error);\n      }\n    };\n    fetchInterviews();\n  }, []);\n  useEffect(() => {\n    const results = interviews.filter(interview => {\n      const interviewer = interview.Interviewer ? interview.Interviewer.toLowerCase() : '';\n      const name = interview.Name ? interview.Name.toLowerCase() : '';\n      // Assuming you have a Date property in your interview objects.\n      const date = interview.Date ? interview.Date.toLowerCase() : '';\n      return interviewer.includes(searchTerm.toLowerCase()) || name.includes(searchTerm.toLowerCase()) || date.includes(searchTerm.toLowerCase());\n    });\n    setFilteredInterviews(results);\n  }, [searchTerm, interviews]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interviews-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Synchrony Logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portal-header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"recruiting-portal-header\",\n        children: \"Recruiting Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by interviewer, applicant, or date\",\n        value: searchTerm,\n        onChange: handleSearch,\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interviews-list\",\n      children: filteredInterviews.map(interview => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Interview ID: \", interview.InterviewID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Interviewer: \", interview.Interviewer || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", interview.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this)]\n      }, interview.InterviewID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Interviews, \"0cgSgk4ClqX92fGQLu04XK1lRWk=\");\n_c = Interviews;\nexport default Interviews;\nvar _c;\n$RefreshReg$(_c, \"Interviews\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","logoImage","Navbar","HomePage","jsxDEV","_jsxDEV","Interviews","_s","interviews","setInterviews","searchTerm","setSearchTerm","filteredInterviews","setFilteredInterviews","fetchInterviews","data","get","error","console","results","filter","interview","interviewer","Interviewer","toLowerCase","name","Name","date","Date","includes","handleSearch","event","target","value","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","InterviewID","_c","$RefreshReg$"],"sources":["/Users/damianmiskow/Desktop/Projects/Synchrony/Synchrony_Login/Synchrony-Interview-Process/src/components/Dashboard/Interviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from './synchrony-logo-1.png';\nimport './Interviews.css';\nimport Navbar from '../Navbar';\nimport HomePage from '../HomePage';\n\nfunction Interviews() {\n  const [interviews, setInterviews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredInterviews, setFilteredInterviews] = useState([]);\n\n  useEffect(() => {\n    const fetchInterviews = async () => {\n      try {\n        const { data } = await axios.get('https://rv0femjg65.execute-api.us-east-1.amazonaws.com/default/InterviewsAccess');\n        setInterviews(data);\n      } catch (error) {\n        console.error('Error fetching interviews:', error);\n      }\n    };\n\n    fetchInterviews();\n  }, []);\n\n  useEffect(() => {\n    const results = interviews.filter(interview => {\n      const interviewer = interview.Interviewer ? interview.Interviewer.toLowerCase() : '';\n      const name = interview.Name ? interview.Name.toLowerCase() : '';\n      // Assuming you have a Date property in your interview objects.\n      const date = interview.Date ? interview.Date.toLowerCase() : '';\n  \n      return interviewer.includes(searchTerm.toLowerCase()) ||\n             name.includes(searchTerm.toLowerCase()) ||\n             date.includes(searchTerm.toLowerCase());\n    });\n    setFilteredInterviews(results);\n  }, [searchTerm, interviews]);\n  \n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div className=\"interviews-container\">\n      <div className=\"header\">\n        <Link to =\"/\">\n        <img src={logoImage} alt=\"Synchrony Logo\" className=\"logo\" />\n        </Link>\n        <Navbar />\n      </div>\n      <div className=\"portal-header-container\">\n        <h1 className=\"recruiting-portal-header\">Recruiting Portal</h1>\n      </div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by interviewer, applicant, or date\"\n          value={searchTerm}\n          onChange={handleSearch}\n          className=\"search-bar\"\n        />\n      </div>\n      <div className=\"interviews-list\">\n  {filteredInterviews.map((interview) => (\n    <div key={interview.InterviewID} className=\"interview-item\">\n      <p>Interview ID: {interview.InterviewID}</p>\n      <p>Interviewer: {interview.Interviewer || 'N/A'}</p> {/* If interviewer is undefined, display 'N/A' */}\n      <p>Name: {interview.Name}</p>\n    </div>\n  ))}\n</div>\n\n    </div>\n  );\n}\n\nexport default Interviews;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,iFAAiF,CAAC;QACnHP,aAAa,CAACM,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDH,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMqB,OAAO,GAAGX,UAAU,CAACY,MAAM,CAACC,SAAS,IAAI;MAC7C,MAAMC,WAAW,GAAGD,SAAS,CAACE,WAAW,GAAGF,SAAS,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC,GAAG,EAAE;MACpF,MAAMC,IAAI,GAAGJ,SAAS,CAACK,IAAI,GAAGL,SAAS,CAACK,IAAI,CAACF,WAAW,CAAC,CAAC,GAAG,EAAE;MAC/D;MACA,MAAMG,IAAI,GAAGN,SAAS,CAACO,IAAI,GAAGP,SAAS,CAACO,IAAI,CAACJ,WAAW,CAAC,CAAC,GAAG,EAAE;MAE/D,OAAOF,WAAW,CAACO,QAAQ,CAACnB,UAAU,CAACc,WAAW,CAAC,CAAC,CAAC,IAC9CC,IAAI,CAACI,QAAQ,CAACnB,UAAU,CAACc,WAAW,CAAC,CAAC,CAAC,IACvCG,IAAI,CAACE,QAAQ,CAACnB,UAAU,CAACc,WAAW,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC;IACFX,qBAAqB,CAACM,OAAO,CAAC;EAChC,CAAC,EAAE,CAACT,UAAU,EAAEF,UAAU,CAAC,CAAC;EAG5B,MAAMsB,YAAY,GAAIC,KAAK,IAAK;IAC9BpB,aAAa,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC9B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrB9B,OAAA,CAACN,IAAI;QAACqC,EAAE,EAAE,GAAG;QAAAD,QAAA,eACb9B,OAAA;UAAKgC,GAAG,EAAEpC,SAAU;UAACqC,GAAG,EAAC,gBAAgB;UAACJ,SAAS,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACPrC,OAAA,CAACH,MAAM;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eACtC9B,OAAA;QAAI6B,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B9B,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,2CAA2C;QACvDX,KAAK,EAAEvB,UAAW;QAClBmC,QAAQ,EAAEf,YAAa;QACvBI,SAAS,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EACnCvB,kBAAkB,CAACkC,GAAG,CAAEzB,SAAS,iBAChChB,OAAA;QAAiC6B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACzD9B,OAAA;UAAA8B,QAAA,GAAG,gBAAc,EAACd,SAAS,CAAC0B,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CrC,OAAA;UAAA8B,QAAA,GAAG,eAAa,EAACd,SAAS,CAACE,WAAW,IAAI,KAAK;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,eACrDrC,OAAA;UAAA8B,QAAA,GAAG,QAAM,EAACd,SAAS,CAACK,IAAI;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHrBrB,SAAS,CAAC0B,WAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI1B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEV;AAACnC,EAAA,CArEQD,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAuEnB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}